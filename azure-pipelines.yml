trigger:
<<<<<<< HEAD
  - '*'
  
=======
- '*'

>>>>>>> d4c12e015427117e6eff4e9bddcbc8c3f781e533
pool:
  vmImage: 'ubuntu-16.04'
  demands:
    - npm
<<<<<<< HEAD
  
=======

>>>>>>> d4c12e015427117e6eff4e9bddcbc8c3f781e533
variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.100'
<<<<<<< HEAD
  
=======

>>>>>>> d4c12e015427117e6eff4e9bddcbc8c3f781e533
steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'
<<<<<<< HEAD
  
=======

>>>>>>> d4c12e015427117e6eff4e9bddcbc8c3f781e533
- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'
<<<<<<< HEAD
  
=======

>>>>>>> d4c12e015427117e6eff4e9bddcbc8c3f781e533
- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
<<<<<<< HEAD
  displayName: 'Run unit tests - $(buildConfiguration)'
  inputs:
    command: 'test'
    arguments: '--no-build --configuration $(buildConfiguration)'
    publishTestResults: true
    projects: '**/*.Tests.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs: 
=======
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
>>>>>>> d4c12e015427117e6eff4e9bddcbc8c3f781e533
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true
<<<<<<< HEAD
=======
    modifyOutputPath: true
>>>>>>> d4c12e015427117e6eff4e9bddcbc8c3f781e533

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()